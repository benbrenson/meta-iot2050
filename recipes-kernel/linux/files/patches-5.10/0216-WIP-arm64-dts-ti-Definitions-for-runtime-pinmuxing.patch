From 586d72c98553799f89d352b692c074b8a72ad338 Mon Sep 17 00:00:00 2001
From: Benedikt Niedermayr <benedikt.niedermayr@siemens.com>
Date: Tue, 21 Feb 2023 11:03:42 +0100
Subject: [PATCH 216/218] WIP: arm64: dts: ti: Definitions for runtime
 pinmuxing

Multiple device tree nodes where added in order to support
runtime pinmuxing via debugfs.

All nodes have been added to the pinctrl device node,
since they are now belonging to multiple interfaces now.
                                                                                                                                                                                                                   We can also not rely on standard pinconf interface since
pinctrl-single is not able to handle that correctly.

Signed-off-by: Benedikt Niedermayr <benedikt.niedermayr@siemens.com>
---
 .../boot/dts/ti/k3-am65-iot2050-common.dtsi   | 427 ++++++++++++++++--
 arch/arm64/boot/dts/ti/k3-am65-main.dtsi      |   2 +-
 arch/arm64/boot/dts/ti/k3-am65-wakeup.dtsi    |   2 +-
 .../dts/ti/k3-am6548-iot2050-advanced-m2.dts  |   2 +-
 4 files changed, 391 insertions(+), 42 deletions(-)

diff --git a/arch/arm64/boot/dts/ti/k3-am65-iot2050-common.dtsi b/arch/arm64/boot/dts/ti/k3-am65-iot2050-common.dtsi
index 3310880e83ee..0fdd007a9c8c 100644
--- a/arch/arm64/boot/dts/ti/k3-am65-iot2050-common.dtsi
+++ b/arch/arm64/boot/dts/ti/k3-am65-iot2050-common.dtsi
@@ -177,6 +177,231 @@ icssg0_emac1: ethernet-mii1 {
 };
 
 &wkup_pmx0 {
+	pinctrl-names =
+	"default",
+	"d0-uart0-rxd",
+	"d0-gpio",
+	"d1-uart0-txd",
+	"d1-gpio",
+	"d2-uart0-ctsn",
+	"d2-gpio",
+	"d3-uart0-rtsn",
+	"d3-gpio",
+	"d10-spi0-cs0",
+	"d10-gpio",
+	"d11-spi0-d0",
+	"d11-gpio",
+	"d12-spi0-d1",
+	"d12-gpio",
+	"d13-spi0-clk",
+	"d13-gpio",
+	"a0-gpio",
+	"a1-gpio",
+	"a2-gpio",
+	"a3-gpio",
+	"a4-gpio",
+	"a5-gpio";
+
+	pinctrl-0 = <&d0_uart0_rxd>;
+	pinctrl-1 = <&d0_uart0_rxd>;
+	pinctrl-2 = <&d0_gpio>;
+	pinctrl-3 = <&d1_uart0_txd>;
+	pinctrl-4 = <&d1_gpio>;
+	pinctrl-5 = <&d2_uart0_ctsn>;
+	pinctrl-6 = <&d2_gpio>;
+	pinctrl-7 = <&d3_uart0_rtsn>;
+	pinctrl-8 = <&d3_gpio>;
+	pinctrl-9 = <&d10_spi0_cs0>;
+	pinctrl-10 = <&d10_gpio>;
+	pinctrl-11 = <&d11_spi0_d0>;
+	pinctrl-12 = <&d11_gpio>;
+	pinctrl-13 = <&d12_spi0_d1>;
+	pinctrl-14 = <&d12_gpio>;
+	pinctrl-15 = <&d13_spi0_clk>;
+	pinctrl-16 = <&d13_gpio>;
+
+	d0_uart0_rxd: d0-uart0-rxd {
+		pinctrl-single,pins = <
+			/* (P4) MCU_UART0_RXD */
+			AM65X_WKUP_IOPAD(0x0044, PIN_INPUT, 4)
+		>;
+	};
+
+	d0_gpio: d0-gpio {
+		pinctrl-single,pins = <
+			/* (P4) WKUP_GPIO0_29 */
+			AM65X_WKUP_IOPAD(0x0044, PIN_INPUT, 7)
+		>;
+		pinctrl-single,bias-pullup   = <0x20000  0x20000  0x10000  0x30000>;
+		pinctrl-single,bias-pulldown = <0x00000  0x0      0x10000  0x30000>;
+	};
+
+	d1_uart0_txd: d1-uart0-txd {
+		pinctrl-single,pins = <
+			/* (P5) MCU_UART0_TXD */
+			AM65X_WKUP_IOPAD(0x0048, PIN_OUTPUT, 4)
+		>;
+	};
+
+	d1_gpio: d1-gpio {
+		pinctrl-single,pins = <
+			/* (P5) WKUP_GPIO0_30 */
+			AM65X_WKUP_IOPAD(0x0048, PIN_INPUT, 7)
+		>;
+		pinctrl-single,bias-pullup   = <0x20000  0x20000  0x10000  0x30000>;
+		pinctrl-single,bias-pulldown = <0x00000  0x0      0x10000  0x30000>;
+	};
+
+	d2_uart0_ctsn: d2-uart0-ctsn {
+		pinctrl-single,pins = <
+			/* (P1) MCU_UART0_CTSn */
+			AM65X_WKUP_IOPAD(0x004C, PIN_INPUT, 4)
+		>;
+	};
+
+	d2_gpio: d2-gpio {
+		pinctrl-single,pins = <
+			/* (P1) WKUP_GPIO0_31 */
+			AM65X_WKUP_IOPAD(0x004C, PIN_INPUT, 7)
+		>;
+		pinctrl-single,bias-pullup   = <0x20000  0x20000  0x10000  0x30000>;
+		pinctrl-single,bias-pulldown = <0x00000  0x0      0x10000  0x30000>;
+	};
+
+	d3_uart0_rtsn: d3-uart0-rtsn {
+		pinctrl-single,pins = <
+			/* (N3) MCU_UART0_RTSn */
+			AM65X_WKUP_IOPAD(0x0054, PIN_OUTPUT, 4)
+		>;
+	};
+
+	d3_gpio: d3-gpio {
+		pinctrl-single,pins = <
+			/* (N3) WKUP_GPIO0_33 */
+			AM65X_WKUP_IOPAD(0x0054, PIN_INPUT, 7)
+		>;
+		pinctrl-single,bias-pullup   = <0x20000  0x20000  0x10000  0x30000>;
+		pinctrl-single,bias-pulldown = <0x00000  0x0      0x10000  0x30000>;
+	};
+
+	d10_spi0_cs0: d10-spi0-cs0 {
+		pinctrl-single,pins = <
+			/* (Y4) MCU_SPI0_CS0 */
+			AM65X_WKUP_IOPAD(0x009c, PIN_OUTPUT, 0)
+		>;
+	};
+
+	d10_gpio: d10-gpio {
+		pinctrl-single,pins = <
+			/* (Y4) WKUP_GPIO0_51 */
+			AM65X_WKUP_IOPAD(0x009c, PIN_INPUT, 7)
+		>;
+		pinctrl-single,bias-pullup   = <0x20000  0x20000  0x10000  0x30000>;
+		pinctrl-single,bias-pulldown = <0x00000  0x0      0x10000  0x30000>;
+	};
+
+	d11_spi0_d0: d11-spi0-d0 {
+		pinctrl-single,pins = <
+			/* (Y3) MCU_SPI0_D0 */
+			AM65X_WKUP_IOPAD(0x0094, PIN_INPUT, 0)
+		>;
+	};
+
+	d11_gpio: d11-gpio {
+		pinctrl-single,pins = <
+			/* (Y3) WKUP_GPIO0_49 */
+			AM65X_WKUP_IOPAD(0x0094, PIN_INPUT, 7)
+		>;
+		pinctrl-single,bias-pullup   = <0x20000  0x20000  0x10000  0x30000>;
+		pinctrl-single,bias-pulldown = <0x00000  0x0      0x10000  0x30000>;
+	};
+
+	d12_spi0_d1: d12-spi0-d1 {
+		pinctrl-single,pins = <
+			/* (Y2) MCU_SPI0_D1 */
+			AM65X_WKUP_IOPAD(0x0098, PIN_INPUT, 0)
+		>;
+	};
+
+	d12_gpio: d12-gpio {
+		pinctrl-single,pins = <
+			/* (Y2) WKUP_GPIO0_50 */
+			AM65X_WKUP_IOPAD(0x0098, PIN_INPUT, 7)
+		>;
+		pinctrl-single,bias-pullup   = <0x20000  0x20000  0x10000  0x30000>;
+		pinctrl-single,bias-pulldown = <0x00000  0x0      0x10000  0x30000>;
+	};
+
+	d13_spi0_clk: d13-spi0-clk {
+		pinctrl-single,pins = <
+			/* (Y1) MCU_SPI0_CLK */
+			AM65X_WKUP_IOPAD(0x0090, PIN_INPUT, 7)
+		>;
+	};
+
+	d13_gpio: d13-gpio {
+		pinctrl-single,pins = <
+			/* (Y1) WKUP_GPIO0_48 */
+			AM65X_WKUP_IOPAD(0x0090, PIN_INPUT, 7)
+		>;
+		pinctrl-single,bias-pullup   = <0x20000  0x20000  0x10000  0x30000>;
+		pinctrl-single,bias-pulldown = <0x00000  0x0      0x10000  0x30000>;
+	};
+
+	a0_gpio: a0-gpio {
+		pinctrl-single,pins = <
+			/* (L6) WKUP_GPIO0_45 */
+			AM65X_WKUP_IOPAD(0x0084, PIN_INPUT, 7)
+		>;
+		pinctrl-single,bias-pullup   = <0x20000  0x20000  0x10000  0x30000>;
+		pinctrl-single,bias-pulldown = <0x00000  0x0      0x10000  0x30000>;
+	};
+
+	a1_gpio: a1-gpio {
+		pinctrl-single,pins = <
+			/* (M6) WKUP_GPIO0_44 */
+			AM65X_WKUP_IOPAD(0x0080, PIN_INPUT, 7)
+		>;
+		pinctrl-single,bias-pullup   = <0x20000  0x20000  0x10000  0x30000>;
+		pinctrl-single,bias-pulldown = <0x00000  0x0      0x10000  0x30000>;
+	};
+
+	a2_gpio: a2-gpio {
+		pinctrl-single,pins = <
+			/* (L5) WKUP_GPIO0_43 */
+			AM65X_WKUP_IOPAD(0x007C, PIN_INPUT, 7)
+		>;
+		pinctrl-single,bias-pullup   = <0x20000  0x20000  0x10000  0x30000>;
+		pinctrl-single,bias-pulldown = <0x00000  0x0      0x10000  0x30000>;
+	};
+
+	a3_gpio: a3-gpio {
+		pinctrl-single,pins = <
+			/* (M5) WKUP_GPIO0_39 */
+			AM65X_WKUP_IOPAD(0x006C, PIN_INPUT, 7)
+		>;
+		pinctrl-single,bias-pullup   = <0x20000  0x20000  0x10000  0x30000>;
+		pinctrl-single,bias-pulldown = <0x00000  0x0      0x10000  0x30000>;
+	};
+
+	a4_gpio: a4-gpio {
+		pinctrl-single,pins = <
+			/* (L2) WKUP_GPIO0_42 */
+			AM65X_WKUP_IOPAD(0x0078, PIN_INPUT, 7)
+		>;
+		pinctrl-single,bias-pullup   = <0x20000  0x20000  0x10000  0x30000>;
+		pinctrl-single,bias-pulldown = <0x00000  0x0      0x10000  0x30000>;
+	};
+
+	a5_gpio: a5-gpio {
+		pinctrl-single,pins = <
+			/* (N5) WKUP_GPIO0_35 */
+			AM65X_WKUP_IOPAD(0x005C, PIN_INPUT, 7)
+		>;
+		pinctrl-single,bias-pullup   = <0x20000  0x20000  0x10000  0x30000>;
+		pinctrl-single,bias-pulldown = <0x00000  0x0      0x10000  0x30000>;
+	};
+
 	wkup_i2c0_pins_default: wkup-i2c0-pins-default {
 		pinctrl-single,pins = <
 			/* (AC7) WKUP_I2C0_SCL */
@@ -209,23 +434,6 @@ AM65X_WKUP_IOPAD(0x0034, PIN_INPUT,  7)
 		>;
 	};
 
-	arduino_uart_pins_default: arduino-uart-pins-default {
-		pinctrl-single,pins = <
-			/* (P4) MCU_UART0_RXD */
-			AM65X_WKUP_IOPAD(0x0044, PIN_INPUT,  4)
-			/* (P5) MCU_UART0_TXD */
-			AM65X_WKUP_IOPAD(0x0048, PIN_OUTPUT, 4)
-		>;
-	};
-
-	arduino_io_d2_to_d3_pins_default: arduino-io-d2-to-d3-pins-default {
-		pinctrl-single,pins = <
-			/* (P1) WKUP_GPIO0_31 */
-			AM65X_WKUP_IOPAD(0x004C, PIN_OUTPUT, 7)
-			/* (N3) WKUP_GPIO0_33 */
-			AM65X_WKUP_IOPAD(0x0054, PIN_OUTPUT, 7)
-		>;
-	};
 
 	arduino_io_oe_pins_default: arduino-io-oe-pins-default {
 		pinctrl-single,pins = <
@@ -240,6 +448,8 @@ AM65X_WKUP_IOPAD(0x0068, PIN_OUTPUT, 7)
 			/* (M1) WKUP_GPIO0_41 */
 			AM65X_WKUP_IOPAD(0x0074, PIN_OUTPUT, 7)
 		>;
+		pinctrl-single,bias-pullup   = <0x20000  0x20000  0x10000  0x30000>;
+		pinctrl-single,bias-pulldown = <0x00000  0x0      0x10000  0x30000>;
 	};
 
 	mcu_fss0_ospi0_pins_default: mcu-fss0-ospi0-pins-default {
@@ -305,6 +515,131 @@ AM65X_WKUP_IOPAD(0x003C, PIN_OUTPUT, 7)
 };
 
 &main_pmx0 {
+	pinctrl-names =
+		"default",
+		"d4-ehrpwm0-a",
+		"d4-gpio",
+		"d5-ehrpwm1-a",
+		"d5-gpio",
+		"d6-ehrpwm2-a",
+		"d6-gpio",
+		"d7-ehrpwm3-a",
+		"d7-gpio",
+		"d8-ehrpwm4-a",
+		"d8-gpio",
+		"d9-ehrpwm5-a",
+		"d9-gpio";
+
+	pinctrl-0 = <&d4_ehrpwm0_a>;
+	pinctrl-1 = <&d4_ehrpwm0_a>;
+	pinctrl-2 = <&d4_gpio>;
+	pinctrl-3 = <&d5_ehrpwm1_a>;
+	pinctrl-4 = <&d5_gpio>;
+	pinctrl-5 = <&d6_ehrpwm2_a>;
+	pinctrl-6 = <&d6_gpio>;
+	pinctrl-7 = <&d7_ehrpwm3_a>;
+	pinctrl-8 = <&d7_gpio>;
+	pinctrl-9 = <&d8_ehrpwm4_a>;
+	pinctrl-10 = <&d8_gpio>;
+	pinctrl-11 = <&d9_ehrpwm5_a>;
+	pinctrl-12 = <&d9_gpio>;
+
+	d4_ehrpwm0_a: d4-ehrpwm0-a {
+		pinctrl-single,pins = <
+			/* (AG18) EHRPWM0_A */
+			AM65X_IOPAD(0x0084, PIN_OUTPUT, 5)
+		>;
+	};
+
+	d4_gpio: d4-gpio {
+		pinctrl-single,pins = <
+			/* (AG18) GPIO0_33 */
+			AM65X_IOPAD(0x0084, PIN_INPUT, 7)
+		>;
+		pinctrl-single,bias-pullup   = <0x20000  0x20000  0x10000  0x30000>;
+		pinctrl-single,bias-pulldown = <0x00000  0x0      0x10000  0x30000>;
+	};
+
+	d5_ehrpwm1_a: d5-ehrpwm1-a {
+		pinctrl-single,pins = <
+			/* (AF17) EHRPWM1_A */
+			AM65X_IOPAD(0x008C, PIN_OUTPUT, 5)
+		>;
+	};
+
+	d5_gpio: d5-gpio {
+		pinctrl-single,pins = <
+			/* (AF17) GPIO0_35 */
+			AM65X_IOPAD(0x008C, PIN_INPUT, 7)
+		>;
+		pinctrl-single,bias-pullup   = <0x20000  0x20000  0x10000  0x30000>;
+		pinctrl-single,bias-pulldown = <0x00000  0x0      0x10000  0x30000>;
+	};
+
+	d6_ehrpwm2_a: d6-ehrpwm2-a {
+		pinctrl-single,pins = <
+			/* (AH16) EHRPWM2_A */
+			AM65X_IOPAD(0x0098, PIN_OUTPUT, 5)
+		>;
+	};
+
+	d6_gpio: d6-gpio {
+		pinctrl-single,pins = <
+			/* (AH16) GPIO0_38 */
+			AM65X_IOPAD(0x0098, PIN_INPUT, 7)
+		>;
+		pinctrl-single,bias-pullup   = <0x20000  0x20000  0x10000  0x30000>;
+		pinctrl-single,bias-pulldown = <0x00000  0x0      0x10000  0x30000>;
+	};
+
+	d7_ehrpwm3_a: d7-ehrpwm3-a {
+		pinctrl-single,pins = <
+			/* (AH15) EHRPWM3_A */
+			AM65X_IOPAD(0x00AC, PIN_OUTPUT, 5)
+		>;
+	};
+
+	d7_gpio: d7-gpio {
+		pinctrl-single,pins = <
+			/* (AH15) GPIO0_43 */
+			AM65X_IOPAD(0x00AC, PIN_INPUT, 7)
+		>;
+		pinctrl-single,bias-pullup   = <0x20000  0x20000  0x10000  0x30000>;
+		pinctrl-single,bias-pulldown = <0x00000  0x0      0x10000  0x30000>;
+	};
+
+	d8_ehrpwm4_a: d8-ehrpwm4-a {
+		pinctrl-single,pins = <
+			/* (AG15) EHRPWM4_A */
+			AM65X_IOPAD(0x00C0, PIN_OUTPUT, 5)
+		>;
+	};
+
+	d8_gpio: d8-gpio {
+		pinctrl-single,pins = <
+			/* (AG15) GPIO0_48 */
+			AM65X_IOPAD(0x00C0, PIN_INPUT, 7)
+		>;
+		pinctrl-single,bias-pullup   = <0x20000  0x20000  0x10000  0x30000>;
+		pinctrl-single,bias-pulldown = <0x00000  0x0      0x10000  0x30000>;
+	};
+
+	d9_ehrpwm5_a: d9-ehrpwm5-a {
+		pinctrl-single,pins = <
+			/* (AD15) EHRPWM5_A */
+			AM65X_IOPAD(0x00CC, PIN_OUTPUT, 5)
+		>;
+	};
+
+	d9_gpio: d9-gpio {
+		pinctrl-single,pins = <
+			/* (AD15) GPIO0_51 */
+			AM65X_IOPAD(0x00CC, PIN_INPUT, 7)
+		>;
+		pinctrl-single,bias-pullup   = <0x20000  0x20000  0x10000  0x30000>;
+		pinctrl-single,bias-pulldown = <0x00000  0x0      0x10000  0x30000>;
+	};
+
 	main_uart1_pins_default: main-uart1-pins-default {
 		pinctrl-single,pins = <
 			AM65X_IOPAD(0x0174, PIN_INPUT,  6)  /* (AE23) UART1_RXD */
@@ -346,17 +681,6 @@ AM65X_IOPAD(0x02c0, PIN_OUTPUT, 0)  /* (AC8) USB1_DRVVBUS */
 		>;
 	};
 
-	arduino_io_d4_to_d9_pins_default: arduino-io-d4-to-d9-pins-default {
-		pinctrl-single,pins = <
-			AM65X_IOPAD(0x0084, PIN_OUTPUT, 7)  /* (AG18) GPIO0_33 */
-			AM65X_IOPAD(0x008C, PIN_OUTPUT, 7)  /* (AF17) GPIO0_35 */
-			AM65X_IOPAD(0x0098, PIN_OUTPUT, 7)  /* (AH16) GPIO0_38 */
-			AM65X_IOPAD(0x00AC, PIN_OUTPUT, 7)  /* (AH15) GPIO0_43 */
-			AM65X_IOPAD(0x00C0, PIN_OUTPUT, 7)  /* (AG15) GPIO0_48 */
-			AM65X_IOPAD(0x00CC, PIN_OUTPUT, 7)  /* (AD15) GPIO0_51 */
-		>;
-	};
-
 	dss_vout1_pins_default: dss-vout1-pins-default {
 		pinctrl-single,pins = <
 			AM65X_IOPAD(0x0000, PIN_OUTPUT, 1)  /* VOUT1_DATA0 */
@@ -477,14 +801,14 @@ &main_uart2 {
 	status = "disabled";
 };
 
-&mcu_uart0 {
-	pinctrl-names = "default";
-	pinctrl-0 = <&arduino_uart_pins_default>;
-};
-
 &main_gpio0 {
-	pinctrl-names = "default";
-	pinctrl-0 = <&arduino_io_d4_to_d9_pins_default>;
+	gpio-ranges = <&main_pmx0 33 33 1>,
+				  <&main_pmx0 35 35 1>,
+				  <&main_pmx0 38 38 1>,
+				  <&main_pmx0 43 43 1>,
+				  <&main_pmx0 48 48 1>,
+				  <&main_pmx0 51 51 1>;
+
 	gpio-line-names =
 		"main_gpio0-base", "", "", "", "", "", "", "", "", "",
 		"", "", "", "", "", "", "", "", "", "",
@@ -497,12 +821,40 @@ &main_gpio0 {
 &wkup_gpio0 {
 	pinctrl-names = "default";
 	pinctrl-0 = <
-		&arduino_io_d2_to_d3_pins_default
 		&arduino_i2c_aio_switch_pins_default
 		&arduino_io_oe_pins_default
 		&push_button_pins_default
 		&db9_com_mode_pins_default
+		&a0_gpio
+		&a1_gpio
+		&a2_gpio
+		&a3_gpio
+		&a4_gpio
+		&a5_gpio
 	>;
+
+	gpio-ranges = <&wkup_pmx0 21 9 1>,
+				  <&wkup_pmx0 29 17 1>,
+				  <&wkup_pmx0 30 18 1>,
+				  <&wkup_pmx0 31 19 1>,
+				  <&wkup_pmx0 33 21 1>,
+				  <&wkup_pmx0 34 22 1>,
+				  <&wkup_pmx0 35 23 1>,
+				  <&wkup_pmx0 36 24 1>,
+				  <&wkup_pmx0 37 25 1>,
+				  <&wkup_pmx0 38 26 1>,
+				  <&wkup_pmx0 39 27 1>,
+				  <&wkup_pmx0 41 29 1>,
+				  <&wkup_pmx0 42 30 1>,
+				  <&wkup_pmx0 43 31 1>,
+				  <&wkup_pmx0 44 32 1>,
+				  <&wkup_pmx0 45 33 1>,
+				  <&wkup_pmx0 48 36 1>,
+				  <&wkup_pmx0 49 37 1>,
+				  <&wkup_pmx0 50 38 1>,
+				  <&wkup_pmx0 51 39 1>,
+				  <&wkup_pmx0 27 15 1>;
+
 	gpio-line-names =
 		/* 0..9 */
 		"wkup_gpio0-base", "", "", "", "UART0-mode1", "UART0-mode0",
@@ -679,9 +1031,6 @@ &usb1 {
 };
 
 &mcu_spi0 {
-	pinctrl-names = "default";
-	pinctrl-0 = <&mcu_spi0_pins_default>;
-
 	#address-cells = <1>;
 	#size-cells= <0>;
 	ti,pindir-d0-out-d1-in;
diff --git a/arch/arm64/boot/dts/ti/k3-am65-main.dtsi b/arch/arm64/boot/dts/ti/k3-am65-main.dtsi
index b33a48cef074..31a88969f91c 100644
--- a/arch/arm64/boot/dts/ti/k3-am65-main.dtsi
+++ b/arch/arm64/boot/dts/ti/k3-am65-main.dtsi
@@ -137,7 +137,7 @@ rng: rng@4e10000 {
 	};
 
 	main_pmx0: pinctrl@11c000 {
-		compatible = "pinctrl-single";
+		compatible = "pinconf-single";
 		reg = <0x0 0x11c000 0x0 0x2e4>;
 		#pinctrl-cells = <1>;
 		pinctrl-single,register-width = <32>;
diff --git a/arch/arm64/boot/dts/ti/k3-am65-wakeup.dtsi b/arch/arm64/boot/dts/ti/k3-am65-wakeup.dtsi
index 62a18b110c52..4a2e43ebaeca 100644
--- a/arch/arm64/boot/dts/ti/k3-am65-wakeup.dtsi
+++ b/arch/arm64/boot/dts/ti/k3-am65-wakeup.dtsi
@@ -40,7 +40,7 @@ chipid@43000014 {
 	};
 
 	wkup_pmx0: pinctrl@4301c000 {
-		compatible = "pinctrl-single";
+		compatible = "pinconf-single";
 		reg = <0x4301c000 0x118>;
 		#pinctrl-cells = <1>;
 		pinctrl-single,register-width = <32>;
diff --git a/arch/arm64/boot/dts/ti/k3-am6548-iot2050-advanced-m2.dts b/arch/arm64/boot/dts/ti/k3-am6548-iot2050-advanced-m2.dts
index cbc411c8fe1d..aacbf7c6a3c4 100644
--- a/arch/arm64/boot/dts/ti/k3-am6548-iot2050-advanced-m2.dts
+++ b/arch/arm64/boot/dts/ti/k3-am6548-iot2050-advanced-m2.dts
@@ -66,7 +66,7 @@ AM65X_IOPAD(0x001c, PIN_INPUT_PULLUP, 7)  /* (C23) GPIO1_89 */
 
 &main_gpio0 {
 	pinctrl-names = "default";
-	pinctrl-0 = <&main_m2_pcie_mux_control &arduino_io_d4_to_d9_pins_default>;
+	pinctrl-0 = <&main_m2_pcie_mux_control>;
 };
 
 &main_gpio1 {
-- 
2.25.1

